name: CrateEC2Instance

on:
  push:
    branches:
      - main
    paths:
      - "create-ec2-instance/**"
      
permissions: 
      id-token: write
      pull-requests: write
      
jobs:
  apply:
    name: Apply
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        dir: [ create-ec2-instance/prod ]
        
    steps:
      - uses: actions/checkout@v2
        name: Checkout
    
      - name: Check diff
        id: diff
        uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            ${{ matrix.dir }}/modules/**/*.tf
            ${{ matrix.dir }}/*.tf
      
      - name: Configure AWS Credentials
        if: steps.diff.outputs.diff
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-northeast-1
          role-to-assume: arn:aws:iam::166313796795:role/test-gha
    
      - name: Setup terraform
        if: steps.diff.outputs.diff
        uses: hashicorp/setup-terraform@v1
      
      - name: Terraform fmt
        id: fmt
        if: steps.diff.outputs.diff
        working-directory: ${{ matrix.dir }}
        run: terraform fmt -check
        continue-on-error: false
      
      - name: Terraform Init
        id: init
        if: steps.diff.outputs.diff
        working-directory: ${{ matrix.dir }}
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        if: steps.diff.outputs.diff
        working-directory: ${{ matrix.dir }}
        run: terraform validate -no-color
      
      - name: Terraform Apply
        id: apply
        if: steps.diff.outputs.diff
        working-directory: ${{ matrix.dir }}
        run: terraform apply -auto-approve
        continue-on-error: false
      
      - uses: actions/github-script@v5
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
            #### Terraform Apply üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ matrix.dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
