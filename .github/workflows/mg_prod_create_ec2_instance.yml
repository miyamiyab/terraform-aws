name: MG_PROD_CREATE_EC2_INSTANCE

on:
  push:
    branches:
      - main
    paths:
      - "ec2/prod/**"
  workflow_dispatch:
    inputs:
      prNumber:
        description: The pull request number that failed.
        required: true
        type: number
      tfRoot:
        description: Working directory to run terraform cli. The first slash should be omitted and the last slash should be added.(e.g. path/to/dir/)
        required: true
        type: string

permissions: 
      id-token: write
      pull-requests: write
      
jobs:
  isPrExsit:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check the pull request exists.
        id: chkPr
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo ${{ github.event.sender.login }}
          HTTP_STATE=$(curl -s -I -u ${{ github.event.sender.login }}:${{ secrets.GH_PAT }} \
              -H "Accept: application/vnd.github.v3+json" \
              -o /dev/null -w '%{http_code}\n' \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.inputs.prNumber }})
          if [ ${HTTP_STATE} -ne 200 ]; then
            echo "${{ github.repository }}/issues/${{ github.event.inputs.prNumber }} is not found."
            exit 1
          fi
  # 複数のディレクトリに対して効率よくプロビジョニングを行うため、対象ディレクトリを抽出する。
  # 使用時は、並列に実行されるテンプレートが競合しないことを事前に確認すること。
  directories:
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ steps.set-dirs.outputs.dir }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}
      - id: set-dirs
        run: echo "::set-output name=dir::$(ls -d ec2/prod/*/ | jq -R -s -c 'split("\n")[:-1]')"
        
  apply:
    runs-on: ubuntu-latest
    needs:  [ isPrExsit, directories ]
    timeout-minutes: 5
    strategy:
      matrix:
        # ["ec2/prod/app_server/","vpc/prod/subnet/"]
        dir: ${{fromJson(needs.directories.outputs.dir)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-northeast-1
          role-to-assume: arn:aws:iam::166313796795:role/test-gha
    
      - name: Check ETag
        id: chkETag
        if: github.event_name == 'push'
        working-directory: ${{ matrix.dir }}
        run: |
          mv ./etag-tfstate.txt{,.old}
          aws s3api head-object --bucket miyashita-tfstate --key ${{ github.repository }}/${{ matrix.dir }}terraform.tfstate | jq -r .ETag > ./etag-tfstate.txt
          diff -u ./etag-tfstate.txt.old ./etag-tfstate.txt
          if [ $? -ne 0 ]; then
            echo "The ETag has changed since the last check."
            exit 1
          fi

      # workflow_dispatch（手動実行用）
      - name: Check ETag
        id: chkETagDispatch
        if: github.event_name == 'workflow_dispatch'
        working-directory: ${{ github.event.inputs.tfRoot }}
        run: |
          mv ./etag-tfstate.txt{,.old}
          aws s3api head-object --bucket miyashita-tfstate --key ${{ github.repository }}/${{ github.event.inputs.tfRoot }}terraform.tfstate | jq -r .ETag > ./etag-tfstate.txt
          diff -u ./etag-tfstate.txt.old ./etag-tfstate.txt
          if [ $? -ne 0 ]; then
            echo "The ETag has changed since the last check."
            exit 1
          fi
        
      # push or pull requestが対象。
      # 前回のコミットと差分がなければスキップ。
      - name: Check diff
        id: diff
        uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            ${{ matrix.dir }}*.tf
    
      - name: Setup terraform
        id: setupTf
        if: steps.diff.outputs.diff || github.event_name == 'workflow_dispatch'
        uses: hashicorp/setup-terraform@v1
      
      - name: Terraform Init
        id: init
        if: steps.diff.outputs.diff
        working-directory: ${{ matrix.dir }}
        run: terraform init -backend-config="key=${{ github.repository }}/${{ matrix.dir }}terraform.tfstate"
      
      - name: Terraform Init
        id: initDispatch
        if: github.event_name == 'workflow_dispatch'
        working-directory: ${{ github.event.inputs.tfRoot }}
        run: terraform init -backend-config="key=${{ github.repository }}/${{ github.event.inputs.tfRoot }}terraform.tfstate"
      
      - name: Terraform Apply
        id: apply
        if: steps.diff.outputs.diff
        working-directory: ${{ matrix.dir }}
        run: terraform apply -auto-approve -no-color

      - name: Terraform Apply
        id: applyDispatch
        if: github.event_name == 'workflow_dispatch'
        working-directory: ${{ github.event.inputs.tfRoot }}
        run: terraform apply -auto-approve -no-color
      
      - name: Find current pull request
        id: findPr
        if: steps.diff.outputs.diff
        uses: jwalton/gh-find-current-pr@v1
        with:
          state: all

      - name: Comment to pull request
        id: commentPr
        if: steps.diff.outputs.diff || github.event_name == 'workflow_dispatch'
        uses: actions/github-script@v6
        env:
          APPLY: "terraform\n${{ steps.apply.outputs.stdout }}"
          PR_NUM: ${{ steps.findPr.outputs.pr }}
          PR_NUM_INPUT: ${{ github.event.inputs.prNumber }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.validate.outputs.stdout }}\`
            #### Terraform Apply 📖\`${{ steps.apply.outcome }}\`
            
            <details><summary>Show Apply</summary>
            
            \`\`\`\n
            ${process.env.APPLY}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ matrix.dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
            let prNumber;
            if (!isNaN(parseInt(process.env.PR_NUM))) {
              prNumber = process.env.PR_NUM;
            } else if (!isNaN(parseInt(process.env.PR_NUM_INPUT))) {
              prNumber = process.env.PR_NUM_INPUT;
            }

            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
