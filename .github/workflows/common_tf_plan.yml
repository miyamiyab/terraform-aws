name: COMMON_TF__PLAN

on:
  push:
    branches:
      - develop
      
permissions: 
      id-token: write
      
jobs:
  # 複数のディレクトリに対して効率よくテストを行うため、対象ディレクトリを抽出する。
  directories:
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ steps.set-dirs.outputs.dir }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}
      - id: set-dirs
        run: echo "::set-output name=dir::$(ls -d */*/ | jq -R -s -c 'split("\n")[:-1]')"

  plan:
    runs-on: ubuntu-latest
    needs: directories
    timeout-minutes: 5
    strategy:
      matrix:
        dir: ${{fromJson(needs.directories.outputs.dir)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}
    
      # 前回のコミットと差分がなければスキップ
      - name: Check diff
        id: diff
        uses: technote-space/get-diff-action@v4.0.2
        with:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          PATTERNS: |
            ${{ matrix.dir }}/modules/**/*.tf
            ${{ matrix.dir }}/*.tf
      
      - name: Configure AWS Credentials
        if: steps.diff.outputs.diff
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-northeast-1
          role-to-assume: arn:aws:iam::166313796795:role/test-gha
    
      # 常に最新版を使う
      - name: Setup terraform
        if: steps.diff.outputs.diff
        uses: hashicorp/setup-terraform@v1
      
      # フォーマットチェック
      - name: Terraform fmt
        id: fmt
        if: steps.diff.outputs.diff
        working-directory: ${{ matrix.dir }}
        run: terraform fmt -check
        
      # 初期化。バックエンドは重複しないように動的に設定する
      - name: Terraform Init
        id: init
        if: steps.diffFormatedTf.outputs.diff
        working-directory: ${{ matrix.dir }}
        run: terraform init -backend-config="key=${{ github.repository }}/${{ matrix.dir }}/terraform.tfstate"
      
      - name: Terraform Validate
        id: validate
        if: steps.diffFormatedTf.outputs.diff
        working-directory: ${{ matrix.dir }}
        run: terraform validate -no-color
      
      - name: Terraform Plan
        id: plan
        if: steps.diffFormatedTf.outputs.diff
        working-directory: ${{ matrix.dir }}
        run: terraform plan -no-color

# 承認～マージまでの間に割り込みでデプロイが発生していないことを確認する
  # 開発ブランチのpushの段階でチェックするのは、以下の通り。
  # 1. git pushに必要な情報をコンテキストから抽出するには、originにpushする段階が楽なため
  # 2. プルリク前からETagをチェックしておき、プルリク作成時に差分があれば弾くため
  checkETag:
    runs-on: ubuntu-latest
    needs: directories
    strategy:
      matrix:
        dir: ${{fromJson(needs.directories.outputs.dir)}} 
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          token: ${{ secrets.GH_PAT }}

      # 各tfstateファイルのETagを出力
      # tfstateファイルがなければ空ファイルが生成される
      - name: Store ETag of tfstate file
        id: etag
        working-directory: ${{ matrix.dir }}
        run: |
          aws s3api head-object --bucket miyashita-tfstate --key ${{ github.repository }}/${{ matrix.dir }}/terraform.tfstate | jq -r .ETag > ./etag-tfstate.txt
        continue-on-error: true
      
      # ETagファイルをコミットする
      # 直前のステップで差分が生じなければエラーになるが受容しスキップする
      - name: Commit ETag of tfstate file
        id: commitETag
        working-directory: ${{ matrix.dir }}
        env:
          EMAIL: ${{ github.event.pusher.email }}
          USER: ${{ github.event.pusher.name }}
        run: |
          git config --local user.email  ${{ github.event.pusher.email }}
          git config --local user.name  ${{ github.event.pusher.name }}
          git add ./etag-tfstate.txt
          git commit -m "add: Store ETag of tfstate file"
        continue-on-error: true
      
      # ETagファイルをoriginにpushする
      # 既に最新であればエラーとなるが受容しスキップする
      - name: Push changes of ETag
        uses: ad-m/github-push-action@master
        id: pushETag
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
